{"ast":null,"code":"var _jsxFileName = \"C:\\\\SAMI\\\\Projects\\\\file_compression\\\\file compressor\\\\client\\\\src\\\\FileCompression.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileCompression() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [compressedFileUrl, setCompressedFileUrl] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleCompress = async () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post('/compress', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      setCompressedFileUrl(url);\n    } catch (error) {\n      console.error('Error compressing file:', error);\n    }\n  };\n  const downloadCompressedFile = () => {\n    const link = document.createElement('a');\n    link.href = compressedFileUrl;\n    link.download = `${selectedFile.name}.gz`;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Compression\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCompress,\n      children: \"Compress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), compressedFileUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Compressed file ready!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadCompressedFile,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(FileCompression, \"AC+3ySLJSpKFrHwcqckqQotwNTs=\");\n_c = FileCompression;\nexport default FileCompression;\nvar _c;\n$RefreshReg$(_c, \"FileCompression\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","FileCompression","_s","selectedFile","setSelectedFile","compressedFileUrl","setCompressedFileUrl","handleFileChange","event","target","files","handleCompress","formData","FormData","append","response","post","headers","responseType","url","window","URL","createObjectURL","Blob","data","error","console","downloadCompressedFile","link","document","createElement","href","download","name","click","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/SAMI/Projects/file_compression/file compressor/client/src/FileCompression.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FileCompression() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [compressedFileUrl, setCompressedFileUrl] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleCompress = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post('/compress', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        responseType: 'blob',\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      setCompressedFileUrl(url);\r\n\r\n    } catch (error) {\r\n      console.error('Error compressing file:', error);\r\n    }\r\n  };\r\n\r\n  const downloadCompressedFile = () => {\r\n    const link = document.createElement('a');\r\n    link.href = compressedFileUrl;\r\n    link.download = `${selectedFile.name}.gz`;\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>File Compression</h1>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleCompress}>Compress</button>\r\n\r\n      {compressedFileUrl && (\r\n        <>\r\n          <p>Compressed file ready!</p>\r\n          <button onClick={downloadCompressedFile}>Download</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileCompression;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,YAAY,CAAC;IAErC,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,WAAW,EAAEJ,QAAQ,EAAE;QACvDK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,YAAY,EAAE;MAChB,CAAC,CAAC;MAEF,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;MACjElB,oBAAoB,CAACa,GAAG,CAAC;IAE3B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAME,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAG1B,iBAAiB;IAC7BuB,IAAI,CAACI,QAAQ,GAAG,GAAG7B,YAAY,CAAC8B,IAAI,KAAK;IACzCL,IAAI,CAACM,KAAK,CAAC,CAAC;EACd,CAAC;EAED,oBACEpC,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAAqC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBzC,OAAA;MAAO0C,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAElC;IAAiB;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDzC,OAAA;MAAQ4C,OAAO,EAAE/B,cAAe;MAAAwB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEjDlC,iBAAiB,iBAChBP,OAAA,CAAAE,SAAA;MAAAmC,QAAA,gBACErC,OAAA;QAAAqC,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7BzC,OAAA;QAAQ4C,OAAO,EAAEf,sBAAuB;QAAAQ,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC1D,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrC,EAAA,CAjDQD,eAAe;AAAA0C,EAAA,GAAf1C,eAAe;AAmDxB,eAAeA,eAAe;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}